# -*- coding: utf-8 -*-
# vim: ft=jinja

# Start with defaults from defs.yaml 
{% import_yaml 'eclipse/defaults.yaml' as defs %}

# Set OS deviations from defaults 
{% set osmap = salt['grains.filter_by']({

        'MacOS':  { 'prefix': '/Applications/Eclipse',
                    'homes' : '/Users/',
                    'os'    : 'macosx-cocoa',
        },
        'Windows':{ 'prefix'   : 'C:\\Program files',
                    'tmpdir'   : 'C:\\temp\\epptmp',
                    'homes'    : 'C:\\Users\\',
                    'workspace': '\\workspace',
                    'command'  : '\\eclipse.exe',
                    'os'       : 'win32',
        },
  }, grain='os', merge=salt['grains.filter_by']({
       'x86_64': {
          'arch': '-x86_64',
       },
}, grain='cpuarch', merge=defs, base="eclipse")) %}

# Merge osmap onto default settings before merging pillars.
{% do defs.eclipse.update(osmap) %}
{% set ide = salt['pillar.get']( 'eclipse', default=defs.eclipse, merge=True) %}

# Get user's group name from pillar or 'id' command
{%- if not ide.prefs.group %}
  {%- set usergroup = salt['cmd.run']('id -gn', runas=ide.prefs.user, output_loglevel='quiet',) or None %}
  {%- do ide.prefs.update({'group': usergroup,}) %}
{% endif %}

# Set directory details
{%- if grains.os == 'MacOS' %}
  {% do ide.dl.update({'suffix': 'dmg'}) %}
  {%- set _realhome = '{0}.app/Contents/MacOS'.format( ide.prefix ) %}
{% elif grains.os == 'Windows' %}
  {% do ide.dl.update({'suffix': 'zip'}) %}
  {% do ide.plugins.update({'path': '\\.metadata\\.plugins' }) %}
  {% do ide.prefs.update({'workspace': '\\workspace' }) %}
{% else %}
  {%- set _realhome = '{0}/eclipse-{1}-{2}-{3}'.format( ide.prefix, ide.epp.edition, ide.epp.release, ide.epp.version) %}
{% endif %}

{% do ide.epp.update({'realhome' : _realhome,
                    'realcmd'  : _realhome ~ ide.command,
                    'workspace': ide.homes ~ ide.prefs.user ~ ide.prefs.workspace,
                    'metadata' : ide.homes ~ ide.prefs.user ~ ide.prefs.workspace ~ ide.plugins.path, })
%}

# Set release details
{% set f = 'eclipse-{0}-{1}-{2}-{3}{4}.{5}'.format(ide.epp.edition, ide.epp.release, ide.epp.version, ide.os, ide.arch, ide.dl.suffix) %}
{% set url  = ide.get('epp:uri', '{0}{1}.{2}/data/'.format(ide.epp.uri, ide.epp.release, ide.epp.version)) ~ '/' ~ f %}

{% do ide.dl.update({ 'archive_name': f,
                      'src_url'     : url,
                      'src_hashurl' : url ~ '.sha512',
                      'src_hashsum' : salt['cmd.run']('curl -s {0}.sha512'.format( url )).split(' ')[0],
                      'unpack_opts' : ' -z -C ' ~  ide.epp.realhome ~ ' --strip-components=1' })
%}
{% set eclipse = ide %}

